paths:
  /api/users:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Los usuarios fueron obtenidos satisfactoriamente desde la bd
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/User'
        "500":
          description: Algo falló en la búsqueda en la bd

  /api/users/find/{userId}:
    get:
      summary: Obtener usuario según ID
      tags:
        - Users
      parameters:
      - name: userId
        in: path
        required: true
        description: ID del usuario a buscar
        schema:
          $type: String
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#components/schemas/User'

  /api/users/{userId}:
    put:
      summary: Actualiza un usuario según ID
      tags:
        - Users
      parameters:
      - name: userId
        in: path
        required: true
        description: ID del usuario a actualizar
        schema:
          $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateUser'

components:
  schemas:
    User:
      type: object
      properties:
        _id: 
          type: ObjectId
          description: ID de mongo
        username:
          type: String
          description: Nombre de usuario
        email:
          type: String
          description: Correo electrónico
        password: 
          type: String
          description: Contraseña
        isAdmin:
          type: Boolean
          description: Indica si el usuario es administrador
      example:
        _id: ObjectId("asd")
        username: usuario1
        email: usuario1@example.com
        password: contraseña
        isAdmin: false

  requestBodies:
    updateUser:
      type: object
      properties:
        username:
          type: String
          description: Nombre de usuario
        email:
          type: String
          description: Correo electrónico
        password: 
          type: String
          description: Contraseña
        isAdmin:
          type: Boolean
          description: Indica si el usuario es administrador
      example:
        username: nuevoUsuario
        email: nuevoUsuario@example.com
        password: nuevaContraseña
        isAdmin: true
